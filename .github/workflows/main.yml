name: Actions ðŸ˜Ž

on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches: [main]

env:  
  UNITY_LICENSE: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><root>\n    <License id=\"Terms\">\n        <MachineBindings>\n            <Binding Key=\"1\" Value=\"576562626572264761624c65526f7578\"/>\n            <Binding Key=\"2\" Value=\"576562626572264761624c65526f7578\"/>\n        </MachineBindings>\n        <MachineID Value=\"D7nTUnjNAmtsUMcnoyrqkgIbYdM=\"/>\n        <SerialHash Value=\"1efd68fa935192b6090ac03c77d289a9f588c55a\"/>\n        <Features>\n            <Feature Value=\"33\"/>\n            <Feature Value=\"1\"/>\n            <Feature Value=\"12\"/>\n            <Feature Value=\"2\"/>\n            <Feature Value=\"24\"/>\n            <Feature Value=\"3\"/>\n            <Feature Value=\"36\"/>\n            <Feature Value=\"17\"/>\n            <Feature Value=\"19\"/>\n            <Feature Value=\"62\"/>\n        </Features>\n        <DeveloperData Value=\"AQAAAEY0LUg2WFMtUE00NS1SM0M4LUUyWlotWkdWOA==\"/>\n        <SerialMasked Value=\"F4-H6XS-PM45-R3C8-E2ZZ-XXXX\"/>\n        <StartDate Value=\"2018-05-02T00:00:00\"/>\n        <UpdateDate Value=\"2021-05-21T20:48:24\"/>\n        <InitialActivationDate Value=\"2018-05-02T14:21:28\"/>\n        <LicenseVersion Value=\"6.x\"/>\n        <ClientProvidedVersion Value=\"2019.2.11f1\"/>\n        <AlwaysOnline Value=\"false\"/>\n        <Entitlements>\n            <Entitlement Ns=\"unity_editor\" Tag=\"UnityPersonal\" Type=\"EDITOR\" ValidTo=\"9999-12-31T00:00:00\"/>\n            <Entitlement Ns=\"unity_editor\" Tag=\"DarkSkin\" Type=\"EDITOR_FEATURE\" ValidTo=\"9999-12-31T00:00:00\"/>\n        </Entitlements>\n    </License>\n<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><SignedInfo><CanonicalizationMethod Algorithm=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"/><SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/><Reference URI=\"#Terms\"><Transforms><Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/></Transforms><DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/><DigestValue>Ui8I607il6gWRH3o8x/HMV7eva8=</DigestValue></Reference></SignedInfo><SignatureValue>bW/8QoV0skYzBUtBvMCxZsQa1kjdBw1cumQZeaSuF9FjpHzp3blFEBTtvvOOB7C0j/19qtdV/QMq\nXkMQj2qQ99rYQPXSrPKySQrdm/6riYd2VPhOMc4QSsbV/OphYOMYkYju1tsvY4ZDi6TDFuT7C1OR\nwiCtmvbUs9Lw/u3jMGjWd/cqZAkupulnXpGz8ltI2GA3RWwpFH+rxEOJWlpqYIfioKntlHv8dbAx\n5fONrmMH2yMJQaS3YOW2noZkoMCgMlsuXE6ddqKz0soWbYXqXEQcNHY4JWcDr97ISdeI3fDP1/XR\nz0bzpLWTGR4lPxuREKW7jqnk/NwoVUXx+anUKg==</SignatureValue></Signature></root>"
  WEB_APP_NAME: 'flappybird-demo'
  IMAGE_NAME: 'flappybird'
  REGISTRY_LOGIN_SERVER: 'demorgt.azurecr.io'
  REGISTRY_USERNAME: demorgt
  REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
  RESOURCE_GROUP_NAME: github-cicd
  # APP_SERVICE_PLAN_NAME: <your-app-service-plan-name>
  REGION_NAME: Central US

jobs:
  prebuild:
    name: Prebuild
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Install LFS
        run: git lfs install
  build-and-deploy:
    needs: ['prebuild']
    name: Build Workflow âœ¨
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: /Library
          key: Library-test-project-WebGL

      # Test
      # - name: Run tests
      #  uses: game-ci/unity-test-runner@v2
      #  with:
      #    projectPath: .

      # Build
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      - name: Deploy to Azure Web App
        uses: azure/webapps-container-deploy@v2
        with:
          app-name: ${{ env.WEB_APP_NAME }}
          images: '${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          resource-group: ${{ env.RESOURCE_GROUP_NAME }}
          # app-service-plan: ${{ env.APP_SERVICE_PLAN_NAME }}
          region: ${{ env.REGION_NAME }}

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

  #
  # End of readme workflow.
  #
  # Below is a test of most combinations, for testing integrity.
  #

  requestManualActivationFile:
    name: Request manual activation file ðŸ”‘
    runs-on: ubuntu-20.04
    steps:
      # Checkout repository
      - uses: actions/checkout@v2

      # Request manual activation file
      - uses: game-ci/unity-request-activation-file@v2
        id: getManualLicenseFile

      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - uses: actions/upload-artifact@v2
        with:
          name: Manual Activation File
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}
  deploy:
    name: Deploy to Docker
    runs-on: ubuntu-20.04
    needs: ["build"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Build
          path: build
      - name: List Folders
        run: ls -al build/
      - name: Login Docker
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Docker image
        run: docker build . -t congchinh262/flappy-bird:latest
      - name: Push image to Docker Registry
        run: docker image push congchinh262/flappy-bird:latest
  cleanUp:
    name: Clean up
    runs-on: ubuntu-20.04
    needs: ['build','deploy']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clean up
        run: git lfs uninstall
#  requestActivation:
#    name: Request activation âœ”
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v2
#      - uses: game-ci/unity-activate@v2
#
#  activateAndThenReturnLicense:
#    name: returnLicense ðŸŽˆ
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v2
#      - uses: game-ci/unity-activate@v2
#      - uses: game-ci/unity-return-license@v2

